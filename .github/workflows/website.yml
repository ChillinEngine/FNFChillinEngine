# Simple workflow for deploying static content to GitHub Pages
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "FNF-UPDATE"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Haxe environment
        uses: krdlab/setup-haxe@v1.5.1
        with:
          haxe-version: 4.3.4
      - name: Install Linux dependencies.
        run: |
            sudo apt update
            sudo apt install libvlc-dev libvlccore-dev vlc-bin vlc libc6 libc6-dev -y
      - name: Download HMM
        run: |
          haxe -version
          haxelib install --quiet hmm 
          cd ${{ github.workspace }}
      - name: Use HMM to install dependencies.
        run: haxelib run hmm install
      - name: Compile The Game
        run: haxelib run lime build html5
      - name: Wait for 1.5 seconds
        run: sleep 1.5
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: ${{ github.workspace }}/export/release/html5/bin/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
